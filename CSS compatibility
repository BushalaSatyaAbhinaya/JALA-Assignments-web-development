1. Create a table and apply table-layout as fixed and none
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table Layout Example</title>
    <style>
        /* Table with fixed layout */
        .fixed-table {
            width: 100%;
            table-layout: fixed;  /* Fixed layout */
            border: 1px solid #000;
        }

        .fixed-table th, .fixed-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .fixed-table th {
            background-color: #f2f2f2;
        }

        /* Table with auto layout (default layout) */
        .auto-table {
            width: 100%;
            table-layout: auto;  /* Default layout (auto) */
            border: 1px solid #000;
        }

        .auto-table th, .auto-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .auto-table th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>

    <h2>Table with Fixed Layout</h2>
    <table class="fixed-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>John</td>
                <td>28</td>
                <td>New York</td>
            </tr>
            <tr>
                <td>Mary</td>
                <td>34</td>
                <td>London</td>
            </tr>
            <tr>
                <td>Mike</td>
                <td>45</td>
                <td>Paris</td>
            </tr>
        </tbody>
    </table>

    <h2>Table with Auto Layout</h2>
    <table class="auto-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>John</td>
                <td>28</td>
                <td>New York</td>
            </tr>
            <tr>
                <td>Mary</td>
                <td>34</td>
                <td>London</td>
            </tr>
            <tr>
                <td>Mike</td>
                <td>45</td>
                <td>Paris</td>
            </tr>
        </tbody>
    </table>

</body>
</html>

2. Create a list and change its list-style-type
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>List Style Type Example</title>
    <style>
        .unordered-list {
            list-style-type: square;  
        }

        .ordered-list {
            list-style-type: upper-roman;  
        }
    </style>
</head>
<body>

    <h2>Unordered List with Square Bullets</h2>
    <ul class="unordered-list">
        <li>Apples</li>
        <li>Bananas</li>
        <li>Cherries</li>
    </ul>

    <h2>Ordered List with Roman Numerals</h2>
    <ol class="ordered-list">
        <li>First </li>
        <li>Second</li>
        <li>Third</li>
    </ol>

</body>
</html>

3. Create a grid with of different types
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Grid Example</title>
    <style>
        .basic-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr); 
            gap: 10px; 
            background-color: #f2f2f2;
            padding: 10px;
        }

        .basic-grid div {
            background-color: #4CAF50;
            color: white;
            padding: 20px;
            text-align: center;
        }

        .fixed-grid {
            display: grid;
            grid-template-columns: 100px 200px 300px; 
            gap: 15px;
            background-color: #f2f2f2;
            padding: 10px;
            margin-top: 30px;
        }

        .fixed-grid div {
            background-color: #2196F3;
            color: white;
            padding: 20px;
            text-align: center;
        }

        .responsive-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); 
            gap: 20px;
            background-color: #f2f2f2;
            padding: 10px;
            margin-top: 30px;
        }

        .responsive-grid div {
            background-color: #FF5722;
            color: white;
            padding: 20px;
            text-align: center;
        }
    </style>
</head>
<body>

    <h2>Basic Grid (3 Equal Columns)</h2>
    <div class="basic-grid">
        <div>Item 1</div>
        <div>Item 2</div>
        <div>Item 3</div>
        <div>Item 4</div>
        <div>Item 5</div>
        <div>Item 6</div>
    </div>

    <h2>Grid with Fixed Column Sizes</h2>
    <div class="fixed-grid">
        <div>Item 1</div>
        <div>Item 2</div>
        <div>Item 3</div>
    </div>

    <h2>Responsive Grid</h2>
    <div class="responsive-grid">
        <div>Item 1</div>
        <div>Item 2</div>
        <div>Item 3</div>
        <div>Item 4</div>
        <div>Item 5</div>
        <div>Item 6</div>
    </div>

</body>
</html>

4. Create a hero image
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hero Image Example</title>
    <style>
        body, html {
            height: 100%;
            margin: 0;
        }

        .hero-image {
            background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("https://contentstatic.techgig.com/thumb/msid-113190957,width-800,resizemode-4/6-Free-GPTs-for-coders-to-become-more-productive-and-tackle-job-skill-requirements.jpg?31904");
            height: 50%;

            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            position: relative;
        }

        .hero-text {
            text-align: center;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
        }

        .hero-text h1 {
            font-size: 3em;
            margin-bottom: 10px;
        }

        .hero-text p {
            font-size: 1.5em;
            margin-bottom: 20px;
        }

        .hero-text button {
            padding: 15px 30px;
            font-size: 1.2em;
            background-color: #f39c12;
            border: none;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }

        .hero-text button:hover {
            background-color: #e67e22;
        }
    </style>
</head>
<body>
    <div class="hero-image">
        <div class="hero-text">
            <h1>HELLO !</h1>
            <p>Welcoe to my wenpage</p>
            <button>click me</button>
        </div>
    </div>
</body>
</html>

5. Write a program of view-port for grid, media queries, image and video.
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Layout with Grid, Media Queries, and Media</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        .container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* Responsive grid with auto-fill */
            gap: 20px;
            padding: 20px;
        }

        .item {
            background-color: #4CAF50;
            color: white;
            padding: 20px;
            border-radius: 5px;
            text-align: center;
        }

        img, video {
            width: 100%;
            height: auto;
            border-radius: 5px;
        }

        @media (max-width: 768px) {
            .container {
                grid-template-columns: 1fr; 
            }

            .item {
                font-size: 1.2rem; 
            }
        }

        @media (max-width: 480px) {
            .item {
                font-size: 1rem; 
            }

            .container {
                gap: 10px; 
            }
        }

    </style>
</head>
<body>

    <div class="container">
        <div class="item">
            <h2>Responsive Grid Item 1</h2>
            <img src="https://via.placeholder.com/500x300" alt="Image 1">
        </div>

        <div class="item">
            <h2>Responsive Grid Item 2</h2>
            <video controls>
                <source src="https://www.w3schools.com/html/mov_bbb.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
        </div>

        <div class="item">
            <h2>Responsive Grid Item 3</h2>
            <img src="https://via.placeholder.com/500x300" alt="Image 2">
        </div>

        <div class="item">
            <h2>Responsive Grid Item 4</h2>
            <video controls>
                <source src="https://www.w3schools.com/html/mov_bbb.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
        </div>
    </div>

</body>
</html>
